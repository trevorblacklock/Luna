# pragma once

# include "bitboard.h"

namespace Luna {

namespace Attacks {

constexpr U64 BishopMasks[SQ_NB] = {
  0x0040201008040200ULL, 0x0000402010080400ULL, 0x0000004020100a00ULL, 0x0000000040221400ULL,
  0x0000000002442800ULL, 0x0000000204085000ULL, 0x0000020408102000ULL, 0x0002040810204000ULL,
  0x0020100804020000ULL, 0x0040201008040000ULL, 0x00004020100a0000ULL, 0x0000004022140000ULL,
  0x0000000244280000ULL, 0x0000020408500000ULL, 0x0002040810200000ULL, 0x0004081020400000ULL,
  0x0010080402000200ULL, 0x0020100804000400ULL, 0x004020100a000a00ULL, 0x0000402214001400ULL,
  0x0000024428002800ULL, 0x0002040850005000ULL, 0x0004081020002000ULL, 0x0008102040004000ULL,
  0x0008040200020400ULL, 0x0010080400040800ULL, 0x0020100a000a1000ULL, 0x0040221400142200ULL,
  0x0002442800284400ULL, 0x0004085000500800ULL, 0x0008102000201000ULL, 0x0010204000402000ULL,
  0x0004020002040800ULL, 0x0008040004081000ULL, 0x00100a000a102000ULL, 0x0022140014224000ULL,
  0x0044280028440200ULL, 0x0008500050080400ULL, 0x0010200020100800ULL, 0x0020400040201000ULL,
  0x0002000204081000ULL, 0x0004000408102000ULL, 0x000a000a10204000ULL, 0x0014001422400000ULL,
  0x0028002844020000ULL, 0x0050005008040200ULL, 0x0020002010080400ULL, 0x0040004020100800ULL,
  0x0000020408102000ULL, 0x0000040810204000ULL, 0x00000a1020400000ULL, 0x0000142240000000ULL,
  0x0000284402000000ULL, 0x0000500804020000ULL, 0x0000201008040200ULL, 0x0000402010080400ULL,
  0x0002040810204000ULL, 0x0004081020400000ULL, 0x000a102040000000ULL, 0x0014224000000000ULL,
  0x0028440200000000ULL, 0x0050080402000000ULL, 0x0020100804020000ULL, 0x0040201008040200ULL
};

constexpr U64 RookMasks[SQ_NB] = {
  0x000101010101017eULL, 0x000202020202027cULL, 0x000404040404047aULL, 0x0008080808080876ULL,
  0x001010101010106eULL, 0x002020202020205eULL, 0x004040404040403eULL, 0x008080808080807eULL,
  0x0001010101017e00ULL, 0x0002020202027c00ULL, 0x0004040404047a00ULL, 0x0008080808087600ULL,
  0x0010101010106e00ULL, 0x0020202020205e00ULL, 0x0040404040403e00ULL, 0x0080808080807e00ULL,
  0x00010101017e0100ULL, 0x00020202027c0200ULL, 0x00040404047a0400ULL, 0x0008080808760800ULL,
  0x00101010106e1000ULL, 0x00202020205e2000ULL, 0x00404040403e4000ULL, 0x00808080807e8000ULL,
  0x000101017e010100ULL, 0x000202027c020200ULL, 0x000404047a040400ULL, 0x0008080876080800ULL,
  0x001010106e101000ULL, 0x002020205e202000ULL, 0x004040403e404000ULL, 0x008080807e808000ULL,
  0x0001017e01010100ULL, 0x0002027c02020200ULL, 0x0004047a04040400ULL, 0x0008087608080800ULL,
  0x0010106e10101000ULL, 0x0020205e20202000ULL, 0x0040403e40404000ULL, 0x0080807e80808000ULL,
  0x00017e0101010100ULL, 0x00027c0202020200ULL, 0x00047a0404040400ULL, 0x0008760808080800ULL,
  0x00106e1010101000ULL, 0x00205e2020202000ULL, 0x00403e4040404000ULL, 0x00807e8080808000ULL,
  0x007e010101010100ULL, 0x007c020202020200ULL, 0x007a040404040400ULL, 0x0076080808080800ULL,
  0x006e101010101000ULL, 0x005e202020202000ULL, 0x003e404040404000ULL, 0x007e808080808000ULL,
  0x7e01010101010100ULL, 0x7c02020202020200ULL, 0x7a04040404040400ULL, 0x7608080808080800ULL,
  0x6e10101010101000ULL, 0x5e20202020202000ULL, 0x3e40404040404000ULL, 0x7e80808080808000ULL
};

constexpr U64 BishopMagics[SQ_NB] = {
  0x0282301022018120ULL, 0x4050012104308004ULL, 0x00880800618a0042ULL, 0x0098205040110040ULL,
  0x400404a000100000ULL, 0x00020282210000c0ULL, 0x000400881c104000ULL, 0x1000420801180284ULL,
  0x8000200d010a1400ULL, 0x01002c040820c300ULL, 0x0000082821002130ULL, 0x000208208d200210ULL,
  0x8002011040000000ULL, 0x0605010108420002ULL, 0x8004008210222040ULL, 0x000400250c226000ULL,
  0x80040030100a0800ULL, 0x180600850c140400ULL, 0x0648061004802008ULL, 0x0008010582014418ULL,
  0x251a100403201800ULL, 0x000080041000a800ULL, 0x0022003c22020a08ULL, 0x0062404202020382ULL,
  0x04101000c0222a09ULL, 0x80242009140805a0ULL, 0x8a00a08030090040ULL, 0x0002080024004008ULL,
  0x001100c02c004040ULL, 0x08012040b2005000ULL, 0x4018210900840100ULL, 0x800420400500c200ULL,
  0x0010221020181048ULL, 0x0004042122020210ULL, 0x001c00cc48080200ULL, 0x4012040108040300ULL,
  0x14020084000200a0ULL, 0x008102020000880cULL, 0x0010020620088680ULL, 0x9a282204420580e0ULL,
  0x084108280c804000ULL, 0x0401880802860880ULL, 0x2002020082003040ULL, 0x0d00004030404602ULL,
  0x004402202a000300ULL, 0x94a4140804308200ULL, 0x4004108425040142ULL, 0x3410012201800020ULL,
  0x001047100822000aULL, 0x000182180104c051ULL, 0x041422004a480000ULL, 0x0002002210440008ULL,
  0x0004200910240304ULL, 0x2000081001020000ULL, 0x004410048104140eULL, 0x0082080809284800ULL,
  0x0a00410880a02001ULL, 0x04a1430111105a01ULL, 0x0200200201044900ULL, 0x88000030a5840440ULL,
  0x0440000010020e01ULL, 0x0008011820088280ULL, 0x0018440408081300ULL, 0x002060010a022040ULL
};

constexpr U64 RookMagics[SQ_NB] = {
  0x0080001040002a80ULL, 0x4140012000100040ULL, 0x6100102001020841ULL, 0x0080248800100080ULL,
  0x12000c1021020068ULL, 0x0300324400080100ULL, 0x0c00011a00900804ULL, 0x2d00020040258100ULL,
  0x090080004006e280ULL, 0xe001004001008065ULL, 0x0048805000806000ULL, 0x0042001820420070ULL,
  0x0002001122000814ULL, 0x0019000a14008900ULL, 0x0100804200030080ULL, 0x0f00802248800100ULL,
  0x80018480034000a0ULL, 0x2010064000c0600aULL, 0x2110808020001000ULL, 0x00d0120022004108ULL,
  0x0201010004180010ULL, 0x004380801c012600ULL, 0x000004000a410810ULL, 0x0022c20000804421ULL,
  0x0000400080002080ULL, 0x09205000c0002000ULL, 0x5100410100200630ULL, 0x202821010010000cULL,
  0x0004008080062800ULL, 0x4412000901000400ULL, 0x0080102400081702ULL, 0x000068a200040141ULL,
  0x4800824002800220ULL, 0x9400201002c00040ULL, 0x0000410011002000ULL, 0x0030008018080100ULL,
  0x0040040080800800ULL, 0x201a001002000448ULL, 0x0002102504000208ULL, 0x8000440082002041ULL,
  0x0000400225808002ULL, 0x0230d00020004000ULL, 0x8104100020008080ULL, 0x0024210010010008ULL,
  0x3804001008010100ULL, 0x11020010440a0048ULL, 0x5800020004010100ULL, 0x0a08038408420001ULL,
  0x0200800440210100ULL, 0x4040004680200080ULL, 0x8058118200402200ULL, 0x0010100018008080ULL,
  0x0030080025001100ULL, 0x2002001814101e00ULL, 0x05c01801504a0c00ULL, 0x4500010084004200ULL,
  0x0080002100804211ULL, 0x0000690080524001ULL, 0x0414810a00114022ULL, 0x0881002430002009ULL,
  0x010a000884502012ULL, 0x080a0001102c0802ULL, 0x2018080081100204ULL, 0x16002082a4010042ULL
};

constexpr int BishopBits[SQ_NB] = {
  6, 5, 5, 5, 5, 5, 5, 6,
	5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 7, 7, 7, 7, 5, 5,
	5, 5, 7, 9, 9, 7, 5, 5,
	5, 5, 7, 9, 9, 7, 5, 5,
	5, 5, 7, 7, 7, 7, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5,
	6, 5, 5, 5, 5, 5, 5, 6
};

constexpr int RookBits[SQ_NB] = {
  12, 11, 11, 11, 11, 11, 11, 12,
	11, 10, 10, 10, 10, 10, 10, 11,
	11, 10, 10, 10, 10, 10, 10, 11,
	11, 10, 10, 10, 10, 10, 10, 11,
	11, 10, 10, 10, 10, 10, 10, 11,
	11, 10, 10, 10, 10, 10, 10, 11,
	11, 10, 10, 10, 10, 10, 10, 11,
	12, 11, 11, 11, 11, 11, 11, 12
};

extern U64 BishopAttacks[SQ_NB][512];
extern U64 RookAttacks[SQ_NB][4096];
extern U64 PAWN_ATTACKS[COLOR_NB][SQ_NB];
extern U64 PSEUDO_PAWN_MOVES[COLOR_NB][SQ_NB];
extern U64 PSEUDO_ATTACKS[PIECE_TYPE_NB][SQ_NB];

constexpr U64 pawn_attacks_bb(Color c, U64 b) {
  return c == WHITE ? shift(b, NORTH_WEST) | shift(b, NORTH_EAST)
                    : shift(b, SOUTH_WEST) | shift(b, SOUTH_EAST);
}

inline U64 pawn_attacks(Color c, Square s) {
  assert(check_sq(s));
  return PAWN_ATTACKS[c][s];
}

constexpr U64 pawn_double_attacks_bb(Color c, U64 b) {
  return c == WHITE ? shift(b, NORTH_WEST) & shift(b, NORTH_EAST)
                    : shift(b, SOUTH_WEST) & shift(b, SOUTH_EAST);
}

static inline U64 attacks_bb(PieceType pc, Square s, U64 o = 0) {
  assert((pc != PAWN) && check_sq(s));

  switch(pc) {
    case BISHOP : return BishopAttacks[s][((o & BishopMasks[s]) * BishopMagics[s]) >> (64 - (U64) BishopBits[s])];
    case ROOK   : return RookAttacks[s][((o & RookMasks[s]) * RookMagics[s]) >> (64 - (U64) RookBits[s])];
    case QUEEN  : return attacks_bb(BISHOP, s, o) | attacks_bb(ROOK, s, o);
    default     : return PSEUDO_ATTACKS[pc][s];
  }
}

void init();
}
}
